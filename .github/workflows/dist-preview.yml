name: PR Deploy on comment
on:
  issue_comment:
    types: [created, edited, deleted]
  push:
    branches:
      - "*"
jobs:
  preview:
    # if: ${{ github.event.issue.pull_request && github.event.comment.body == '/deploy'}}
    runs-on: ubuntu-latest
    steps:
      # - name: Get PR SHA
      #   id: sha
      #   uses: actions/github-script@v4
      #   with:
      #     result-encoding: string
      #     script: |
      #       const { owner, repo, number } = context.issue;
      #       const pr = await github.pulls.get({
      #         owner,
      #         repo,
      #         pull_number: number,
      #       });
      #       return pr.data.head.sha
      - uses: actions/checkout@v2
        # with:
        #   ref: ${{ steps.sha.outputs.result }}
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        uses: ./.github/actions/install
      - name: Build packages
        run: yarn build
      - name: Config git
        run: |
          git config --local user.email "react-native-elements-ci@users.noreply.github.com"
          git config --local user.name "React Native Elements CI"
          git remote add preview https://RNE_BOT_TOKEN:${{ secrets.RNE_BOT_TOKEN }}@github.com/rneui/rneui.git
      - name: Create local changes
        run: |
          sed -i -e 's/dist/src/g' .gitignore
          git rm -rf packages/*/src
          jq 'del(.devDependencies."@rneui/base",.peerDependencies."@rneui/base")'  packages/themed/package.json >  packages/themed/package.json.temp
          mv packages/themed/package.json.temp packages/themed/package.json
          git add .
          git commit -m "Bleeding Edge Version" -a --no-verify

          for pkg in $(find ./packages -mindepth 1 -maxdepth 1 -type d -printf '%f\n'); do
               echo "Deploying @rneui/$pkg"
               git push preview `git subtree split --prefix packages/$pkg -b $pkg`:refs/heads/$pkg --force
          done
      # - name: Message success
      #   if: ${{ success() }}
      #   uses: actions/github-script@v4
      #   with:
      #     script: |
      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: 'Deployment succeeded! ✅',
      #       });
      # - name: Message failure
      #   if: ${{ failure() }}
      #   uses: actions/github-script@v4
      #   with:
      #     script: |
      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: 'Deployment failed! ❌',
      #       });
